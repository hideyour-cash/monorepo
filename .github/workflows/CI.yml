name: CI
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VITE_RELAYER: ${{ secrets.VITE_RELAYER }}
  VITE_CONTRACT: c28a0b8ab1211fa0bec1hyctest.testnet
  VITE_NEAR_NETWORK: testnet
  VITE_API_GRAPHQL_URL: https://api.thegraph.com/subgraphs/name/veigajoao/test_hyc
  VITE_NEAR_NODE_URL: https://rpc.testnet.near.org
  VITE_GTM_ID: ${{ secrets.VITE_GTM_ID }}
on: pull_request

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_build_and_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch circom
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'iden3/circom'
          version: 'tags/v2.1.3'
          file: 'circom-linux-amd64'
          target: 'circom'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Give circom exec permissions
        run: chmod +x circom

      - name: Add circom to path
        run: echo $(pwd) >> $GITHUB_PATH

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          cache: 'yarn'

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup component add rustfmt
          rustup target add wasm32-unknown-unknown

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Installing Dependencies
        run: yarn

      - name: Compile circuits
        run: yarn circuits circuit:setup:plonk

      - name: Relayer Tests
        run: yarn relayer test

      - name: Rust Tests
        run: yarn contracts test:rust

      - name: Lib Tests
        run: yarn contracts test:lib

  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch circom
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'iden3/circom'
          version: 'tags/v2.1.3'
          file: 'circom-linux-amd64'
          target: 'circom'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Give circom exec permissions
        run: chmod +x circom

      - name: Add circom to path
        run: echo $(pwd) >> $GITHUB_PATH

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          cache: 'yarn'

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Installing Dependencies
        run: yarn

      - name: Compile circuits
        run: yarn circuits circuit:setup:plonk

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: false
          browser: chrome
          install-command: yarn
          build: yarn front build
          start: yarn front dev

  dev_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch circom
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'iden3/circom'
          version: 'tags/v2.1.3'
          file: 'circom-linux-amd64'
          target: 'circom'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Give circom exec permissions
        run: chmod +x circom

      - name: Add circom to path
        run: echo $(pwd) >> $GITHUB_PATH

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
          cache: 'yarn'

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Install Yarn Globally
        run: npm install -g yarn

      - name: Installing Dependencies
        run: yarn

      - name: Compile circuits
        run: yarn circuits circuit:setup:plonk

      - name: Pull vercel setup
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: >
          vercel
          deploy
          --prebuilt
          --token=${{ secrets.VERCEL_TOKEN }}

